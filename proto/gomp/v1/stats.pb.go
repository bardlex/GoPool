// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/gomp/v1/stats.proto

package v1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MinerStats represents statistics for a specific miner
type MinerStats struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MinerAddress    string                 `protobuf:"bytes,1,opt,name=miner_address,json=minerAddress,proto3" json:"miner_address,omitempty"`
	WorkerName      string                 `protobuf:"bytes,2,opt,name=worker_name,json=workerName,proto3" json:"worker_name,omitempty"`
	Hashrate        float64                `protobuf:"fixed64,3,opt,name=hashrate,proto3" json:"hashrate,omitempty"`
	SharesSubmitted int64                  `protobuf:"varint,4,opt,name=shares_submitted,json=sharesSubmitted,proto3" json:"shares_submitted,omitempty"`
	SharesAccepted  int64                  `protobuf:"varint,5,opt,name=shares_accepted,json=sharesAccepted,proto3" json:"shares_accepted,omitempty"`
	SharesRejected  int64                  `protobuf:"varint,6,opt,name=shares_rejected,json=sharesRejected,proto3" json:"shares_rejected,omitempty"`
	Difficulty      float64                `protobuf:"fixed64,7,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	LastShare       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_share,json=lastShare,proto3" json:"last_share,omitempty"`
	ConnectedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=connected_at,json=connectedAt,proto3" json:"connected_at,omitempty"`
	IsActive        bool                   `protobuf:"varint,10,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MinerStats) Reset() {
	*x = MinerStats{}
	mi := &file_proto_gomp_v1_stats_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MinerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerStats) ProtoMessage() {}

func (x *MinerStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gomp_v1_stats_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerStats.ProtoReflect.Descriptor instead.
func (*MinerStats) Descriptor() ([]byte, []int) {
	return file_proto_gomp_v1_stats_proto_rawDescGZIP(), []int{0}
}

func (x *MinerStats) GetMinerAddress() string {
	if x != nil {
		return x.MinerAddress
	}
	return ""
}

func (x *MinerStats) GetWorkerName() string {
	if x != nil {
		return x.WorkerName
	}
	return ""
}

func (x *MinerStats) GetHashrate() float64 {
	if x != nil {
		return x.Hashrate
	}
	return 0
}

func (x *MinerStats) GetSharesSubmitted() int64 {
	if x != nil {
		return x.SharesSubmitted
	}
	return 0
}

func (x *MinerStats) GetSharesAccepted() int64 {
	if x != nil {
		return x.SharesAccepted
	}
	return 0
}

func (x *MinerStats) GetSharesRejected() int64 {
	if x != nil {
		return x.SharesRejected
	}
	return 0
}

func (x *MinerStats) GetDifficulty() float64 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *MinerStats) GetLastShare() *timestamppb.Timestamp {
	if x != nil {
		return x.LastShare
	}
	return nil
}

func (x *MinerStats) GetConnectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ConnectedAt
	}
	return nil
}

func (x *MinerStats) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// PoolStats represents overall pool statistics
type PoolStats struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TotalHashrate     float64                `protobuf:"fixed64,1,opt,name=total_hashrate,json=totalHashrate,proto3" json:"total_hashrate,omitempty"`
	ActiveMiners      int64                  `protobuf:"varint,2,opt,name=active_miners,json=activeMiners,proto3" json:"active_miners,omitempty"`
	TotalShares       int64                  `protobuf:"varint,3,opt,name=total_shares,json=totalShares,proto3" json:"total_shares,omitempty"`
	BlocksFound       int64                  `protobuf:"varint,4,opt,name=blocks_found,json=blocksFound,proto3" json:"blocks_found,omitempty"`
	PoolLuck          float64                `protobuf:"fixed64,5,opt,name=pool_luck,json=poolLuck,proto3" json:"pool_luck,omitempty"`
	NetworkDifficulty float64                `protobuf:"fixed64,6,opt,name=network_difficulty,json=networkDifficulty,proto3" json:"network_difficulty,omitempty"`
	NetworkHeight     int64                  `protobuf:"varint,7,opt,name=network_height,json=networkHeight,proto3" json:"network_height,omitempty"`
	LastBlock         *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_block,json=lastBlock,proto3" json:"last_block,omitempty"`
	Timestamp         *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PoolStats) Reset() {
	*x = PoolStats{}
	mi := &file_proto_gomp_v1_stats_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PoolStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolStats) ProtoMessage() {}

func (x *PoolStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gomp_v1_stats_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolStats.ProtoReflect.Descriptor instead.
func (*PoolStats) Descriptor() ([]byte, []int) {
	return file_proto_gomp_v1_stats_proto_rawDescGZIP(), []int{1}
}

func (x *PoolStats) GetTotalHashrate() float64 {
	if x != nil {
		return x.TotalHashrate
	}
	return 0
}

func (x *PoolStats) GetActiveMiners() int64 {
	if x != nil {
		return x.ActiveMiners
	}
	return 0
}

func (x *PoolStats) GetTotalShares() int64 {
	if x != nil {
		return x.TotalShares
	}
	return 0
}

func (x *PoolStats) GetBlocksFound() int64 {
	if x != nil {
		return x.BlocksFound
	}
	return 0
}

func (x *PoolStats) GetPoolLuck() float64 {
	if x != nil {
		return x.PoolLuck
	}
	return 0
}

func (x *PoolStats) GetNetworkDifficulty() float64 {
	if x != nil {
		return x.NetworkDifficulty
	}
	return 0
}

func (x *PoolStats) GetNetworkHeight() int64 {
	if x != nil {
		return x.NetworkHeight
	}
	return 0
}

func (x *PoolStats) GetLastBlock() *timestamppb.Timestamp {
	if x != nil {
		return x.LastBlock
	}
	return nil
}

func (x *PoolStats) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// ShareMetric is used for time-series data
type ShareMetric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinerAddress  string                 `protobuf:"bytes,1,opt,name=miner_address,json=minerAddress,proto3" json:"miner_address,omitempty"`
	WorkerName    string                 `protobuf:"bytes,2,opt,name=worker_name,json=workerName,proto3" json:"worker_name,omitempty"`
	Difficulty    float64                `protobuf:"fixed64,3,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Status        ShareStatus            `protobuf:"varint,4,opt,name=status,proto3,enum=gomp.v1.ShareStatus" json:"status,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	JobId         string                 `protobuf:"bytes,6,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	BlockHeight   int64                  `protobuf:"varint,7,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareMetric) Reset() {
	*x = ShareMetric{}
	mi := &file_proto_gomp_v1_stats_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareMetric) ProtoMessage() {}

func (x *ShareMetric) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gomp_v1_stats_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareMetric.ProtoReflect.Descriptor instead.
func (*ShareMetric) Descriptor() ([]byte, []int) {
	return file_proto_gomp_v1_stats_proto_rawDescGZIP(), []int{2}
}

func (x *ShareMetric) GetMinerAddress() string {
	if x != nil {
		return x.MinerAddress
	}
	return ""
}

func (x *ShareMetric) GetWorkerName() string {
	if x != nil {
		return x.WorkerName
	}
	return ""
}

func (x *ShareMetric) GetDifficulty() float64 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *ShareMetric) GetStatus() ShareStatus {
	if x != nil {
		return x.Status
	}
	return ShareStatus_SHARE_STATUS_UNSPECIFIED
}

func (x *ShareMetric) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ShareMetric) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ShareMetric) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

// HashrateMetric tracks hashrate over time
type HashrateMetric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinerAddress  string                 `protobuf:"bytes,1,opt,name=miner_address,json=minerAddress,proto3" json:"miner_address,omitempty"`
	WorkerName    string                 `protobuf:"bytes,2,opt,name=worker_name,json=workerName,proto3" json:"worker_name,omitempty"`
	Hashrate      float64                `protobuf:"fixed64,3,opt,name=hashrate,proto3" json:"hashrate,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	WindowSeconds int32                  `protobuf:"varint,5,opt,name=window_seconds,json=windowSeconds,proto3" json:"window_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HashrateMetric) Reset() {
	*x = HashrateMetric{}
	mi := &file_proto_gomp_v1_stats_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HashrateMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashrateMetric) ProtoMessage() {}

func (x *HashrateMetric) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gomp_v1_stats_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashrateMetric.ProtoReflect.Descriptor instead.
func (*HashrateMetric) Descriptor() ([]byte, []int) {
	return file_proto_gomp_v1_stats_proto_rawDescGZIP(), []int{3}
}

func (x *HashrateMetric) GetMinerAddress() string {
	if x != nil {
		return x.MinerAddress
	}
	return ""
}

func (x *HashrateMetric) GetWorkerName() string {
	if x != nil {
		return x.WorkerName
	}
	return ""
}

func (x *HashrateMetric) GetHashrate() float64 {
	if x != nil {
		return x.Hashrate
	}
	return 0
}

func (x *HashrateMetric) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *HashrateMetric) GetWindowSeconds() int32 {
	if x != nil {
		return x.WindowSeconds
	}
	return 0
}

var File_proto_gomp_v1_stats_proto protoreflect.FileDescriptor

const file_proto_gomp_v1_stats_proto_rawDesc = "" +
	"\n" +
	"\x19proto/gomp/v1/stats.proto\x12\agomp.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19proto/gomp/v1/share.proto\"\xa2\x03\n" +
	"\n" +
	"MinerStats\x12#\n" +
	"\rminer_address\x18\x01 \x01(\tR\fminerAddress\x12\x1f\n" +
	"\vworker_name\x18\x02 \x01(\tR\n" +
	"workerName\x12\x1a\n" +
	"\bhashrate\x18\x03 \x01(\x01R\bhashrate\x12)\n" +
	"\x10shares_submitted\x18\x04 \x01(\x03R\x0fsharesSubmitted\x12'\n" +
	"\x0fshares_accepted\x18\x05 \x01(\x03R\x0esharesAccepted\x12'\n" +
	"\x0fshares_rejected\x18\x06 \x01(\x03R\x0esharesRejected\x12\x1e\n" +
	"\n" +
	"difficulty\x18\a \x01(\x01R\n" +
	"difficulty\x129\n" +
	"\n" +
	"last_share\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tlastShare\x12=\n" +
	"\fconnected_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\vconnectedAt\x12\x1b\n" +
	"\tis_active\x18\n" +
	" \x01(\bR\bisActive\"\x85\x03\n" +
	"\tPoolStats\x12%\n" +
	"\x0etotal_hashrate\x18\x01 \x01(\x01R\rtotalHashrate\x12#\n" +
	"\ractive_miners\x18\x02 \x01(\x03R\factiveMiners\x12!\n" +
	"\ftotal_shares\x18\x03 \x01(\x03R\vtotalShares\x12!\n" +
	"\fblocks_found\x18\x04 \x01(\x03R\vblocksFound\x12\x1b\n" +
	"\tpool_luck\x18\x05 \x01(\x01R\bpoolLuck\x12-\n" +
	"\x12network_difficulty\x18\x06 \x01(\x01R\x11networkDifficulty\x12%\n" +
	"\x0enetwork_height\x18\a \x01(\x03R\rnetworkHeight\x129\n" +
	"\n" +
	"last_block\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tlastBlock\x128\n" +
	"\ttimestamp\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x95\x02\n" +
	"\vShareMetric\x12#\n" +
	"\rminer_address\x18\x01 \x01(\tR\fminerAddress\x12\x1f\n" +
	"\vworker_name\x18\x02 \x01(\tR\n" +
	"workerName\x12\x1e\n" +
	"\n" +
	"difficulty\x18\x03 \x01(\x01R\n" +
	"difficulty\x12,\n" +
	"\x06status\x18\x04 \x01(\x0e2\x14.gomp.v1.ShareStatusR\x06status\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x15\n" +
	"\x06job_id\x18\x06 \x01(\tR\x05jobId\x12!\n" +
	"\fblock_height\x18\a \x01(\x03R\vblockHeight\"\xd3\x01\n" +
	"\x0eHashrateMetric\x12#\n" +
	"\rminer_address\x18\x01 \x01(\tR\fminerAddress\x12\x1f\n" +
	"\vworker_name\x18\x02 \x01(\tR\n" +
	"workerName\x12\x1a\n" +
	"\bhashrate\x18\x03 \x01(\x01R\bhashrate\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12%\n" +
	"\x0ewindow_seconds\x18\x05 \x01(\x05R\rwindowSecondsB'Z%github.com/bardlex/gomp/proto/gomp/v1b\x06proto3"

var (
	file_proto_gomp_v1_stats_proto_rawDescOnce sync.Once
	file_proto_gomp_v1_stats_proto_rawDescData []byte
)

func file_proto_gomp_v1_stats_proto_rawDescGZIP() []byte {
	file_proto_gomp_v1_stats_proto_rawDescOnce.Do(func() {
		file_proto_gomp_v1_stats_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_gomp_v1_stats_proto_rawDesc), len(file_proto_gomp_v1_stats_proto_rawDesc)))
	})
	return file_proto_gomp_v1_stats_proto_rawDescData
}

var file_proto_gomp_v1_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_gomp_v1_stats_proto_goTypes = []any{
	(*MinerStats)(nil),            // 0: gomp.v1.MinerStats
	(*PoolStats)(nil),             // 1: gomp.v1.PoolStats
	(*ShareMetric)(nil),           // 2: gomp.v1.ShareMetric
	(*HashrateMetric)(nil),        // 3: gomp.v1.HashrateMetric
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(ShareStatus)(0),              // 5: gomp.v1.ShareStatus
}
var file_proto_gomp_v1_stats_proto_depIdxs = []int32{
	4, // 0: gomp.v1.MinerStats.last_share:type_name -> google.protobuf.Timestamp
	4, // 1: gomp.v1.MinerStats.connected_at:type_name -> google.protobuf.Timestamp
	4, // 2: gomp.v1.PoolStats.last_block:type_name -> google.protobuf.Timestamp
	4, // 3: gomp.v1.PoolStats.timestamp:type_name -> google.protobuf.Timestamp
	5, // 4: gomp.v1.ShareMetric.status:type_name -> gomp.v1.ShareStatus
	4, // 5: gomp.v1.ShareMetric.timestamp:type_name -> google.protobuf.Timestamp
	4, // 6: gomp.v1.HashrateMetric.timestamp:type_name -> google.protobuf.Timestamp
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_proto_gomp_v1_stats_proto_init() }
func file_proto_gomp_v1_stats_proto_init() {
	if File_proto_gomp_v1_stats_proto != nil {
		return
	}
	file_proto_gomp_v1_share_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_gomp_v1_stats_proto_rawDesc), len(file_proto_gomp_v1_stats_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_gomp_v1_stats_proto_goTypes,
		DependencyIndexes: file_proto_gomp_v1_stats_proto_depIdxs,
		MessageInfos:      file_proto_gomp_v1_stats_proto_msgTypes,
	}.Build()
	File_proto_gomp_v1_stats_proto = out.File
	file_proto_gomp_v1_stats_proto_goTypes = nil
	file_proto_gomp_v1_stats_proto_depIdxs = nil
}
