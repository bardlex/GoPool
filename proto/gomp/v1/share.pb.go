// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/gomp/v1/share.proto

package v1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ShareStatus represents the validation status of a share
type ShareStatus int32

const (
	ShareStatus_SHARE_STATUS_UNSPECIFIED     ShareStatus = 0
	ShareStatus_SHARE_STATUS_PENDING         ShareStatus = 1
	ShareStatus_SHARE_STATUS_VALID           ShareStatus = 2
	ShareStatus_SHARE_STATUS_INVALID         ShareStatus = 3
	ShareStatus_SHARE_STATUS_STALE           ShareStatus = 4
	ShareStatus_SHARE_STATUS_DUPLICATE       ShareStatus = 5
	ShareStatus_SHARE_STATUS_BLOCK_CANDIDATE ShareStatus = 6
)

// Enum value maps for ShareStatus.
var (
	ShareStatus_name = map[int32]string{
		0: "SHARE_STATUS_UNSPECIFIED",
		1: "SHARE_STATUS_PENDING",
		2: "SHARE_STATUS_VALID",
		3: "SHARE_STATUS_INVALID",
		4: "SHARE_STATUS_STALE",
		5: "SHARE_STATUS_DUPLICATE",
		6: "SHARE_STATUS_BLOCK_CANDIDATE",
	}
	ShareStatus_value = map[string]int32{
		"SHARE_STATUS_UNSPECIFIED":     0,
		"SHARE_STATUS_PENDING":         1,
		"SHARE_STATUS_VALID":           2,
		"SHARE_STATUS_INVALID":         3,
		"SHARE_STATUS_STALE":           4,
		"SHARE_STATUS_DUPLICATE":       5,
		"SHARE_STATUS_BLOCK_CANDIDATE": 6,
	}
)

func (x ShareStatus) Enum() *ShareStatus {
	p := new(ShareStatus)
	*p = x
	return p
}

func (x ShareStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShareStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_gomp_v1_share_proto_enumTypes[0].Descriptor()
}

func (ShareStatus) Type() protoreflect.EnumType {
	return &file_proto_gomp_v1_share_proto_enumTypes[0]
}

func (x ShareStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShareStatus.Descriptor instead.
func (ShareStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_gomp_v1_share_proto_rawDescGZIP(), []int{0}
}

// Share represents a mining share submission
type Share struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	JobId             string                 `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	MinerAddress      string                 `protobuf:"bytes,3,opt,name=miner_address,json=minerAddress,proto3" json:"miner_address,omitempty"`
	WorkerName        string                 `protobuf:"bytes,4,opt,name=worker_name,json=workerName,proto3" json:"worker_name,omitempty"`
	ExtraNonce2       string                 `protobuf:"bytes,5,opt,name=extra_nonce2,json=extraNonce2,proto3" json:"extra_nonce2,omitempty"`
	Ntime             string                 `protobuf:"bytes,6,opt,name=ntime,proto3" json:"ntime,omitempty"`
	Nonce             string                 `protobuf:"bytes,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Difficulty        float64                `protobuf:"fixed64,8,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	NetworkDifficulty float64                `protobuf:"fixed64,9,opt,name=network_difficulty,json=networkDifficulty,proto3" json:"network_difficulty,omitempty"`
	BlockHeight       int64                  `protobuf:"varint,10,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	SubmittedAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty"`
	Status            ShareStatus            `protobuf:"varint,12,opt,name=status,proto3,enum=gomp.v1.ShareStatus" json:"status,omitempty"`
	ErrorMessage      string                 `protobuf:"bytes,13,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Share) Reset() {
	*x = Share{}
	mi := &file_proto_gomp_v1_share_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Share) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Share) ProtoMessage() {}

func (x *Share) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gomp_v1_share_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Share.ProtoReflect.Descriptor instead.
func (*Share) Descriptor() ([]byte, []int) {
	return file_proto_gomp_v1_share_proto_rawDescGZIP(), []int{0}
}

func (x *Share) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Share) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *Share) GetMinerAddress() string {
	if x != nil {
		return x.MinerAddress
	}
	return ""
}

func (x *Share) GetWorkerName() string {
	if x != nil {
		return x.WorkerName
	}
	return ""
}

func (x *Share) GetExtraNonce2() string {
	if x != nil {
		return x.ExtraNonce2
	}
	return ""
}

func (x *Share) GetNtime() string {
	if x != nil {
		return x.Ntime
	}
	return ""
}

func (x *Share) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *Share) GetDifficulty() float64 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *Share) GetNetworkDifficulty() float64 {
	if x != nil {
		return x.NetworkDifficulty
	}
	return 0
}

func (x *Share) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *Share) GetSubmittedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmittedAt
	}
	return nil
}

func (x *Share) GetStatus() ShareStatus {
	if x != nil {
		return x.Status
	}
	return ShareStatus_SHARE_STATUS_UNSPECIFIED
}

func (x *Share) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// ShareSubmission is the message sent from stratumd to shareproc
type ShareSubmission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Share         *Share                 `protobuf:"bytes,1,opt,name=share,proto3" json:"share,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	RemoteAddr    string                 `protobuf:"bytes,3,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareSubmission) Reset() {
	*x = ShareSubmission{}
	mi := &file_proto_gomp_v1_share_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareSubmission) ProtoMessage() {}

func (x *ShareSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gomp_v1_share_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareSubmission.ProtoReflect.Descriptor instead.
func (*ShareSubmission) Descriptor() ([]byte, []int) {
	return file_proto_gomp_v1_share_proto_rawDescGZIP(), []int{1}
}

func (x *ShareSubmission) GetShare() *Share {
	if x != nil {
		return x.Share
	}
	return nil
}

func (x *ShareSubmission) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ShareSubmission) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

// ShareResult is the response from shareproc back to stratumd
type ShareResult struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ShareId          string                 `protobuf:"bytes,1,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	Status           ShareStatus            `protobuf:"varint,2,opt,name=status,proto3,enum=gomp.v1.ShareStatus" json:"status,omitempty"`
	ErrorMessage     string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	IsBlockCandidate bool                   `protobuf:"varint,4,opt,name=is_block_candidate,json=isBlockCandidate,proto3" json:"is_block_candidate,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ShareResult) Reset() {
	*x = ShareResult{}
	mi := &file_proto_gomp_v1_share_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareResult) ProtoMessage() {}

func (x *ShareResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gomp_v1_share_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareResult.ProtoReflect.Descriptor instead.
func (*ShareResult) Descriptor() ([]byte, []int) {
	return file_proto_gomp_v1_share_proto_rawDescGZIP(), []int{2}
}

func (x *ShareResult) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

func (x *ShareResult) GetStatus() ShareStatus {
	if x != nil {
		return x.Status
	}
	return ShareStatus_SHARE_STATUS_UNSPECIFIED
}

func (x *ShareResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ShareResult) GetIsBlockCandidate() bool {
	if x != nil {
		return x.IsBlockCandidate
	}
	return false
}

// BlockCandidate represents a share that meets block difficulty
type BlockCandidate struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Share            *Share                 `protobuf:"bytes,1,opt,name=share,proto3" json:"share,omitempty"`
	BlockHex         string                 `protobuf:"bytes,2,opt,name=block_hex,json=blockHex,proto3" json:"block_hex,omitempty"`
	BlockHash        string                 `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	TargetDifficulty float64                `protobuf:"fixed64,4,opt,name=target_difficulty,json=targetDifficulty,proto3" json:"target_difficulty,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BlockCandidate) Reset() {
	*x = BlockCandidate{}
	mi := &file_proto_gomp_v1_share_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockCandidate) ProtoMessage() {}

func (x *BlockCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gomp_v1_share_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockCandidate.ProtoReflect.Descriptor instead.
func (*BlockCandidate) Descriptor() ([]byte, []int) {
	return file_proto_gomp_v1_share_proto_rawDescGZIP(), []int{3}
}

func (x *BlockCandidate) GetShare() *Share {
	if x != nil {
		return x.Share
	}
	return nil
}

func (x *BlockCandidate) GetBlockHex() string {
	if x != nil {
		return x.BlockHex
	}
	return ""
}

func (x *BlockCandidate) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *BlockCandidate) GetTargetDifficulty() float64 {
	if x != nil {
		return x.TargetDifficulty
	}
	return 0
}

// SolvedBlock represents a confirmed solved block
type SolvedBlock struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BlockHash         string                 `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockHex          string                 `protobuf:"bytes,2,opt,name=block_hex,json=blockHex,proto3" json:"block_hex,omitempty"`
	BlockHeight       int64                  `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	NetworkDifficulty float64                `protobuf:"fixed64,4,opt,name=network_difficulty,json=networkDifficulty,proto3" json:"network_difficulty,omitempty"`
	CoinbaseTx        string                 `protobuf:"bytes,5,opt,name=coinbase_tx,json=coinbaseTx,proto3" json:"coinbase_tx,omitempty"`
	BlockReward       int64                  `protobuf:"varint,6,opt,name=block_reward,json=blockReward,proto3" json:"block_reward,omitempty"`
	TransactionFees   int64                  `protobuf:"varint,7,opt,name=transaction_fees,json=transactionFees,proto3" json:"transaction_fees,omitempty"`
	FoundAt           *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=found_at,json=foundAt,proto3" json:"found_at,omitempty"`
	FoundByMiner      string                 `protobuf:"bytes,9,opt,name=found_by_miner,json=foundByMiner,proto3" json:"found_by_miner,omitempty"`
	FoundByWorker     string                 `protobuf:"bytes,10,opt,name=found_by_worker,json=foundByWorker,proto3" json:"found_by_worker,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SolvedBlock) Reset() {
	*x = SolvedBlock{}
	mi := &file_proto_gomp_v1_share_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolvedBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolvedBlock) ProtoMessage() {}

func (x *SolvedBlock) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gomp_v1_share_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolvedBlock.ProtoReflect.Descriptor instead.
func (*SolvedBlock) Descriptor() ([]byte, []int) {
	return file_proto_gomp_v1_share_proto_rawDescGZIP(), []int{4}
}

func (x *SolvedBlock) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *SolvedBlock) GetBlockHex() string {
	if x != nil {
		return x.BlockHex
	}
	return ""
}

func (x *SolvedBlock) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *SolvedBlock) GetNetworkDifficulty() float64 {
	if x != nil {
		return x.NetworkDifficulty
	}
	return 0
}

func (x *SolvedBlock) GetCoinbaseTx() string {
	if x != nil {
		return x.CoinbaseTx
	}
	return ""
}

func (x *SolvedBlock) GetBlockReward() int64 {
	if x != nil {
		return x.BlockReward
	}
	return 0
}

func (x *SolvedBlock) GetTransactionFees() int64 {
	if x != nil {
		return x.TransactionFees
	}
	return 0
}

func (x *SolvedBlock) GetFoundAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FoundAt
	}
	return nil
}

func (x *SolvedBlock) GetFoundByMiner() string {
	if x != nil {
		return x.FoundByMiner
	}
	return ""
}

func (x *SolvedBlock) GetFoundByWorker() string {
	if x != nil {
		return x.FoundByWorker
	}
	return ""
}

var File_proto_gomp_v1_share_proto protoreflect.FileDescriptor

const file_proto_gomp_v1_share_proto_rawDesc = "" +
	"\n" +
	"\x19proto/gomp/v1/share.proto\x12\agomp.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc7\x03\n" +
	"\x05Share\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\x12#\n" +
	"\rminer_address\x18\x03 \x01(\tR\fminerAddress\x12\x1f\n" +
	"\vworker_name\x18\x04 \x01(\tR\n" +
	"workerName\x12!\n" +
	"\fextra_nonce2\x18\x05 \x01(\tR\vextraNonce2\x12\x14\n" +
	"\x05ntime\x18\x06 \x01(\tR\x05ntime\x12\x14\n" +
	"\x05nonce\x18\a \x01(\tR\x05nonce\x12\x1e\n" +
	"\n" +
	"difficulty\x18\b \x01(\x01R\n" +
	"difficulty\x12-\n" +
	"\x12network_difficulty\x18\t \x01(\x01R\x11networkDifficulty\x12!\n" +
	"\fblock_height\x18\n" +
	" \x01(\x03R\vblockHeight\x12=\n" +
	"\fsubmitted_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\vsubmittedAt\x12,\n" +
	"\x06status\x18\f \x01(\x0e2\x14.gomp.v1.ShareStatusR\x06status\x12#\n" +
	"\rerror_message\x18\r \x01(\tR\ferrorMessage\"w\n" +
	"\x0fShareSubmission\x12$\n" +
	"\x05share\x18\x01 \x01(\v2\x0e.gomp.v1.ShareR\x05share\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x1f\n" +
	"\vremote_addr\x18\x03 \x01(\tR\n" +
	"remoteAddr\"\xa9\x01\n" +
	"\vShareResult\x12\x19\n" +
	"\bshare_id\x18\x01 \x01(\tR\ashareId\x12,\n" +
	"\x06status\x18\x02 \x01(\x0e2\x14.gomp.v1.ShareStatusR\x06status\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12,\n" +
	"\x12is_block_candidate\x18\x04 \x01(\bR\x10isBlockCandidate\"\x9f\x01\n" +
	"\x0eBlockCandidate\x12$\n" +
	"\x05share\x18\x01 \x01(\v2\x0e.gomp.v1.ShareR\x05share\x12\x1b\n" +
	"\tblock_hex\x18\x02 \x01(\tR\bblockHex\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x03 \x01(\tR\tblockHash\x12+\n" +
	"\x11target_difficulty\x18\x04 \x01(\x01R\x10targetDifficulty\"\x8f\x03\n" +
	"\vSolvedBlock\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x01 \x01(\tR\tblockHash\x12\x1b\n" +
	"\tblock_hex\x18\x02 \x01(\tR\bblockHex\x12!\n" +
	"\fblock_height\x18\x03 \x01(\x03R\vblockHeight\x12-\n" +
	"\x12network_difficulty\x18\x04 \x01(\x01R\x11networkDifficulty\x12\x1f\n" +
	"\vcoinbase_tx\x18\x05 \x01(\tR\n" +
	"coinbaseTx\x12!\n" +
	"\fblock_reward\x18\x06 \x01(\x03R\vblockReward\x12)\n" +
	"\x10transaction_fees\x18\a \x01(\x03R\x0ftransactionFees\x125\n" +
	"\bfound_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\afoundAt\x12$\n" +
	"\x0efound_by_miner\x18\t \x01(\tR\ffoundByMiner\x12&\n" +
	"\x0ffound_by_worker\x18\n" +
	" \x01(\tR\rfoundByWorker*\xcd\x01\n" +
	"\vShareStatus\x12\x1c\n" +
	"\x18SHARE_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14SHARE_STATUS_PENDING\x10\x01\x12\x16\n" +
	"\x12SHARE_STATUS_VALID\x10\x02\x12\x18\n" +
	"\x14SHARE_STATUS_INVALID\x10\x03\x12\x16\n" +
	"\x12SHARE_STATUS_STALE\x10\x04\x12\x1a\n" +
	"\x16SHARE_STATUS_DUPLICATE\x10\x05\x12 \n" +
	"\x1cSHARE_STATUS_BLOCK_CANDIDATE\x10\x06B'Z%github.com/bardlex/gomp/proto/gomp/v1b\x06proto3"

var (
	file_proto_gomp_v1_share_proto_rawDescOnce sync.Once
	file_proto_gomp_v1_share_proto_rawDescData []byte
)

func file_proto_gomp_v1_share_proto_rawDescGZIP() []byte {
	file_proto_gomp_v1_share_proto_rawDescOnce.Do(func() {
		file_proto_gomp_v1_share_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_gomp_v1_share_proto_rawDesc), len(file_proto_gomp_v1_share_proto_rawDesc)))
	})
	return file_proto_gomp_v1_share_proto_rawDescData
}

var file_proto_gomp_v1_share_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_gomp_v1_share_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_gomp_v1_share_proto_goTypes = []any{
	(ShareStatus)(0),              // 0: gomp.v1.ShareStatus
	(*Share)(nil),                 // 1: gomp.v1.Share
	(*ShareSubmission)(nil),       // 2: gomp.v1.ShareSubmission
	(*ShareResult)(nil),           // 3: gomp.v1.ShareResult
	(*BlockCandidate)(nil),        // 4: gomp.v1.BlockCandidate
	(*SolvedBlock)(nil),           // 5: gomp.v1.SolvedBlock
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_proto_gomp_v1_share_proto_depIdxs = []int32{
	6, // 0: gomp.v1.Share.submitted_at:type_name -> google.protobuf.Timestamp
	0, // 1: gomp.v1.Share.status:type_name -> gomp.v1.ShareStatus
	1, // 2: gomp.v1.ShareSubmission.share:type_name -> gomp.v1.Share
	0, // 3: gomp.v1.ShareResult.status:type_name -> gomp.v1.ShareStatus
	1, // 4: gomp.v1.BlockCandidate.share:type_name -> gomp.v1.Share
	6, // 5: gomp.v1.SolvedBlock.found_at:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_gomp_v1_share_proto_init() }
func file_proto_gomp_v1_share_proto_init() {
	if File_proto_gomp_v1_share_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_gomp_v1_share_proto_rawDesc), len(file_proto_gomp_v1_share_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_gomp_v1_share_proto_goTypes,
		DependencyIndexes: file_proto_gomp_v1_share_proto_depIdxs,
		EnumInfos:         file_proto_gomp_v1_share_proto_enumTypes,
		MessageInfos:      file_proto_gomp_v1_share_proto_msgTypes,
	}.Build()
	File_proto_gomp_v1_share_proto = out.File
	file_proto_gomp_v1_share_proto_goTypes = nil
	file_proto_gomp_v1_share_proto_depIdxs = nil
}
